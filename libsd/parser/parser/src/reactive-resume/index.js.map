{"version":3,"sources":["../../../../../../libs/parser/src/reactive-resume/index.ts"],"sourcesContent":["import { ResumeData, resumeDataSchema } from \"@reactive-resume/schema\";\nimport { Json } from \"@reactive-resume/utils\";\nimport { Schema } from \"zod\";\n\nimport { Parser } from \"../interfaces/parser\";\n\nexport class ReactiveResumeParser implements Parser<Json, ResumeData> {\n  schema: Schema;\n\n  constructor() {\n    this.schema = resumeDataSchema;\n  }\n\n  readFile(file: File): Promise<Json> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        try {\n          const result = JSON.parse(reader.result as string) as Json;\n          resolve(result);\n        } catch (error) {\n          reject(new Error(\"Failed to parse JSON\"));\n        }\n      };\n\n      reader.onerror = () => {\n        reject(new Error(\"Failed to read the file\"));\n      };\n\n      reader.readAsText(file);\n    });\n  }\n\n  validate(data: Json) {\n    return this.schema.parse(data) as ResumeData;\n  }\n\n  convert(data: ResumeData) {\n    return data;\n  }\n}\n"],"names":["ReactiveResumeParser","readFile","file","Promise","resolve","reject","reader","FileReader","onload","result","JSON","parse","error","Error","onerror","readAsText","validate","data","schema","convert","constructor","resumeDataSchema"],"mappings":";;;;+BAMaA;;;eAAAA;;;wBANgC;AAMtC,IAAA,AAAMA,uBAAN,MAAMA;IAOXC,SAASC,IAAU,EAAiB;QAClC,OAAO,IAAIC,QAAQ,CAACC,SAASC;YAC3B,MAAMC,SAAS,IAAIC;YAEnBD,OAAOE,MAAM,GAAG;gBACd,IAAI;oBACF,MAAMC,SAASC,KAAKC,KAAK,CAACL,OAAOG,MAAM;oBACvCL,QAAQK;gBACV,EAAE,OAAOG,OAAO;oBACdP,OAAO,IAAIQ,MAAM;gBACnB;YACF;YAEAP,OAAOQ,OAAO,GAAG;gBACfT,OAAO,IAAIQ,MAAM;YACnB;YAEAP,OAAOS,UAAU,CAACb;QACpB;IACF;IAEAc,SAASC,IAAU,EAAE;QACnB,OAAO,IAAI,CAACC,MAAM,CAACP,KAAK,CAACM;IAC3B;IAEAE,QAAQF,IAAgB,EAAE;QACxB,OAAOA;IACT;IA/BAG,aAAc;QACZ,IAAI,CAACF,MAAM,GAAGG,wBAAgB;IAChC;AA8BF"}